# This number should be, at maximum, the number of CPU cores on your system.
worker_processes 4;

# Number of file descriptors used for Nginx.
worker_rlimit_nofile 200000;

# Only log critical errors.
error_log /var/log/nginx/error.log crit;

pid /var/run/nginx.pid;

events {

  worker_connections 8000;
  accept_mutex on; # set to 'on' if nginx worker_processes > 1
  use epoll;
  multi_accept on;

}

http {
  include /etc/nginx/mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  # access_log /var/log/nginx/access.log combined buffer=16k;
  # access_log /var/log/nginx/access.log main buffer=16k;
  # Sendfile copies data between one FD and other from within the kernel.
  sendfile on;

 # Caches information about open FDs, freqently accessed files.
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Disable access log altogether.
    access_log off;

    # Causes nginx to attempt to send its HTTP response head in one packet,  instead of using partial frames.
    tcp_nopush on;

    # Don't buffer data-sends (disable Nagle algorithm).
    tcp_nodelay on;

    # Timeout for keep-alive connections. Server will close connections after this time.
    keepalive_timeout 10;

    # Number of requests a client can make over the keep-alive connection.
    keepalive_requests 1000;

    # Allow the server to close the connection after a client stops responding.
    reset_timedout_connection on;

    # Send the client a "request timed out" if the body is not loaded by this time.
    client_body_timeout 10;

    # If the client stops reading data, free up the stale client connection after this much time.
    send_timeout 2;

    # Compression.
    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "msie6";

#   upstream app_server {
#     # fail_timeout=0 means we always retry an upstream even if it failed
#     # to return a good HTTP response
#     server app-server:8000 fail_timeout=0;
#   }

  server {
    listen 80 deferred;
    client_max_body_size 4G;

    server_name social.com www.social.com;

    # keepalive_timeout 5;

    # path for static files
    root /app_client;

    location / {
        # checks for static file, if not found proxy to app
        try_files $uri $uri/index.html @proxy_to_app;
    }

    location /nginx_status {
        stub_status;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_redirect off;

        proxy_buffers 16 8k;
        proxy_buffer_size 8k;

      proxy_pass http://app-server:8000;
    }
  }
}

daemon off;
